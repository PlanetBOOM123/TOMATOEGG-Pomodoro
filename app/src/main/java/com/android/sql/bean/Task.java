package com.android.sql.bean;

// Task类用于表示应用中的任务实体，通常会包含任务相关的各种关键信息，例如任务名称、时长等，
// 在整个应用的业务逻辑中，可用于对任务进行管理、展示以及与其他模块（如涉及用户、统计等模块）交互等操作。
public class Task {
    // 用于存储任务的名称，类型为String
    String name;
    // 用于存储任务预计花费或者已经花费的时间，单位可能根据具体业务情况而定（比如分钟、小时等），类型为Integer，
    // 通过这个属性可以了解任务的时间相关信息，用于时间统计、展示等功能实现。
    Integer time;
    // 用于存储执行该任务的用户的唯一标识符（ID），类型为Integer，通过这个属性可以关联到具体是哪个用户创建或者负责该任务，
    // 在涉及多用户任务管理或者基于用户的任务统计等场景中会起到关键作用。
    Integer user_id;
    // 用于存储任务的总时长，可能是累计多次执行该任务的总时间等情况，类型为Integer，
    // 可以用于更全面地统计任务的时间消耗情况，比如在做任务时间分析、数据统计等功能模块中会使用到。
    Integer total_time;

    // 获取执行该任务的用户ID的方法，外部类可以通过调用此方法获取到当前Task对象对应的用户标识符，
    // 以便在需要根据用户来筛选、查询任务等业务场景中使用该用户ID信息。
    public Integer getUser_id() {
        return user_id;
    }

    // 设置执行该任务的用户ID的方法，外部类可以通过调用此方法来更新当前Task对象的用户ID属性，
    // 不过实际应用中可能需要遵循一定的业务规则来确定是否允许以及何时允许修改这个属性值。
    public void setUser_id(Integer user_id) {
        this.user_id = user_id;
    }

    // 获取任务总时长的方法，方便外部类获取当前Task对象所代表任务的总时间信息，
    // 在涉及任务时间统计、展示以及与其他时间相关的业务逻辑处理时会调用该方法获取总时长数据。
    public Integer getTotal_time() {
        return total_time;
    }

    // 设置任务总时长的方法，外部类可以通过调用此方法来更新当前Task对象的总时长属性，
    // 比如在任务执行完毕进行时间累加记录，或者对总时长数据进行修正等场景下会使用到这个方法来更新总时长的值。
    public void setTotal_time(Integer total_time) {
        this.total_time = total_time;
    }

    // 公共的无参构造函数，用于创建一个默认初始化的Task对象，当不需要传入初始参数来创建任务对象时可以使用，
    // 不过使用这个构造函数创建的对象，其各个属性默认值通常为相应类型的默认值（如null、0等），后续需要通过对应的设置方法来完善对象属性。
    public Task() {
    }

    // 有参构造函数，用于创建一个Task对象并同时初始化任务的名称（name）和时间（time）属性，
    // 传入的参数分别对应任务的具体名称和预计/已花费时间，方便在已知这两个关键信息的情况下快速创建一个Task对象实例，
    // 例如在创建一个新任务并明确其基本信息时可以使用这个构造函数。
    public Task(String name, Integer time) {
        this.name = name;
        this.time = time;
    }

    // 获取任务名称的方法，外部类通过调用此方法可以获取到当前Task对象所代表任务的名称信息，
    // 在任务展示、查询等场景中，经常需要获取任务名称来呈现给用户或者进行相应的业务逻辑判断等操作。
    public String getName() {
        return name;
    }

    // 设置任务名称的方法，外部类可以通过调用此方法来更新当前Task对象的任务名称属性，
    // 比如用户修改任务名称或者根据业务规则对任务重新命名等场景下会使用该方法来修改任务的名称。
    public String setName(String name) {
        this.name = name;
        return this.name;
    }

    // 获取任务时间（预计/已花费时间）的方法，外部类调用此方法可获取当前Task对象对应的任务时间信息，
    // 在涉及时间相关的业务处理（如时间统计、对比等）以及展示任务详情等场景中会使用该方法获取时间数据。
    public Integer getTime() {
        return time;
    }

    // 设置任务时间（预计/已花费时间）的方法，外部类可以通过调用此方法来更新当前Task对象的任务时间属性，
    // 例如在任务执行过程中更新已花费时间，或者调整任务预计时间等情况下会使用该方法对时间属性进行修改。
    public void setTime(Integer time) {
        this.time = time;
    }
}